name: Blue-Green ECS Deployment

on:
  schedule:
    - cron: '0 8 * * *'  
  push:
    branches:
      - main

env:
  AWS_REGION: "ap-south-1"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      run: |
        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com

    - name: Build and Push Docker Image
      run: |
        IMAGE_TAG=$(date +%s)
        docker build -t ${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG .
        docker tag ${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG
        echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

    - name: Update ECS Task Definition
      run: |
        sed -i "s|<IMAGE>|${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG|g" ${{ secrets.TASK_DEFINITION }}
        aws ecs register-task-definition --cli-input-json file://${{ secrets.TASK_DEFINITION }}

    - name: Deploy to ECS via CodeDeploy
      run: |
        REVISION=$(aws ecs describe-task-definition --task-definition MyECSApp --query "taskDefinition.revision" --output text)
        aws deploy create-deployment \
          --application-name ${{ secrets.CODEDEPLOY_APP }} \
          --deployment-group-name ${{ secrets.DEPLOYMENT_GROUP }} \
          --deployment-config-name CodeDeployDefault.ECSAllAtOnce \
          --revision revisionType=AppSpecContent,appSpecContent="{\"version\":\"0.0\",\"Resources\":[{\"TargetService\":{\"Type\":\"AWS::ECS::Service\",\"Properties\":{\"TaskDefinition\":\"MyECSApp:$REVISION\",\"LoadBalancerInfo\":{\"ContainerName\":\"MyECSContainer\",\"ContainerPort\":80}}}}]}"
